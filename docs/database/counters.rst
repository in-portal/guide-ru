Счётчики
********
`Data Source`_

K4 позволяет достаточно гибко задавать любые **Count SQLs** (они же счётчики) и в последствии их использовать
где потребуется. Счётчики применяются в основном для подсчёта количества записей (в
:doc:`таблице </database/table_structure>`) используя пользовательский (custom)
:doc:`sql запрос </database/using_database>`.

.. note::

   Перед использованием счётчика требуется создать запись, описывающую счётчик в таблице
   :doc:`/database/table_structure/counters`.

Использование
=============

- Переданные, при вызове счётчика, параметры можно получить в поле :ref:`tc_Counters_CountQuery` написав их в
  следующем формате: ``<%PARAM_NAME%>``, напр.

.. code:: sql

   SELECT COUNT(*)
   FROM `<%PREFIX%>PortalUser`
   WHERE `Status`= 1

- Названия таблиц (без :ref:`префиксов <const_TABLE_PREFIX>` в именах :doc:`таблиц </database/table_structure>`),
  изменения в которых ведут за собой сбрасывание конкретного счётчика нужно писать в поле
  :ref:`tc_Counters_TablesAffected` в формате: ``|TableName1[|TableNameN]|`` (т.е. одна или более таблиц
  разделённых символом ``|`` и по одному символу ``|`` в начале и в конце строки. Обычно это список всех таблиц,
  которые упоминаются в поле :ref:`tc_Counters_CountQuery`.
- Если при вызове в счётчик будут передаваться параметры, то будет создана копия записи счётчика только с 1 в
  поле :ref:`tc_Counters_IsClone`. Это нужно для того, чтобы можно было независимо друг от друга хранить результаты
  подсчёта одно и того-же счётчика но вызванного с разным набором параметров. Например это удобно, когда требуется
  посчитать кол-во товаров в определённой подкатегории.
- Если требуется сбросить результаты отдельного (или всех) счётчиков, то надо в поле :ref:`tc_Counters_CountValue`
  записать ``NULL`` (не слово ``NULL``) и смело стереть все счётчики у которых значение поля
  :ref:`tc_Counters_IsClone` равно 1.

В последствии можно вызвать счётчик из любого требуемого места в коде использую конструкцию:

.. code:: php

   $count_value = $this->Application->getCounter('<COUNTER_NAME>', Array(<COUNTER_PARAMS>));

Зачем использовать
==================

Может возникнуть вопрос: "почему надо использовать этот механизм, а не писать самому вызов sql например
в тэге (tag), который вызывается из блока (параметр render_as) для :doc:`/tags/print_list`?". Ответ
довольно прост: "механизм о котором идёт речь также автоматически записывает в cache результаты подсчётов
и в последствии не повторяет тот-же самый запрос и тем самым уменьшает нагрузку производимую сайтом на сервер,
а так-же через это уменьшает время требуемое для показывания сайта".

.. seealso::

   - :doc:`/database/table_structure/counters`


.. _Data Source: http://guide.in-portal.org/rus/index.php/K4:%D0%A1%D1%87%D1%91%D1%82%D1%87%D0%B8%D0%BA%D0%B8
